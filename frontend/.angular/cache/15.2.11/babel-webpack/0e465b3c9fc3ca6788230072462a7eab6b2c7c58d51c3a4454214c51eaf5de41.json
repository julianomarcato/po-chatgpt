{"ast":null,"code":"import _asyncToGenerator from \"/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom, of, catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  canActivate() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.auth.isAuthenticated()) return true;\n      try {\n        const res = yield firstValueFrom(_this.auth.checkAuth().pipe(catchError(err => of({\n          authenticated: false\n        }))));\n        if (res.authenticated) {\n          _this.auth.setUser(res.user);\n          return true;\n        } else {\n          window.location.href = '/auth/google';\n          return false;\n        }\n      } catch {\n        window.location.href = '/auth/google';\n        return false;\n      }\n    })();\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";AAIA,SAASA,cAAc,EAAEC,EAAE,EAAEC,UAAU,QAAQ,MAAM;;;;AAGrD,OAAM,MAAOC,SAAS;EAEpBC,YAAoBC,IAAiB,EAAUC,MAAc;IAAzC,SAAI,GAAJD,IAAI;IAAuB,WAAM,GAANC,MAAM;EAAU;EAEzDC,WAAW;IAAA;IAAA;MACf,IAAG,KAAI,CAACF,IAAI,CAACG,eAAe,EAAE,EAAE,OAAO,IAAI;MAE3C,IAAG;QACD,MAAMC,GAAG,SAAaT,cAAc,CAAC,KAAI,CAACK,IAAI,CAACK,SAAS,EAAE,CAACC,IAAI,CAC7DT,UAAU,CAACU,GAAG,IAAIX,EAAE,CAAC;UAAEY,aAAa,EAAC;QAAK,CAAE,CAAC,CAAC,CAC/C,CAAC;QAEF,IAAGJ,GAAG,CAACI,aAAa,EAAC;UACnB,KAAI,CAACR,IAAI,CAACS,OAAO,CAACL,GAAG,CAACM,IAAI,CAAC;UAC3B,OAAO,IAAI;SACZ,MAAM;UACLC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,cAAc;UACrC,OAAO,KAAK;;OAEf,OAAK;QACJF,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,cAAc;QACrC,OAAO,KAAK;;IACb;EACH;;;uBAvBWf,SAAS;IAAA;EAAA;;;aAATA,SAAS;MAAAgB,SAAThB,SAAS;MAAAiB,YADG;IAAM;EAAA","names":["firstValueFrom","of","catchError","AuthGuard","constructor","auth","router","canActivate","isAuthenticated","res","checkAuth","pipe","err","authenticated","setUser","user","window","location","href","factory","providedIn"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/auth.guard.ts"],"sourcesContent":["// src/app/auth.guard.ts\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { firstValueFrom, of, catchError } from 'rxjs';\n\n@Injectable({ providedIn:'root' })\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService, private router: Router){}\n\n  async canActivate(): Promise<boolean>{\n    if(this.auth.isAuthenticated()) return true;\n\n    try{\n      const res:any = await firstValueFrom(this.auth.checkAuth().pipe(\n        catchError(err => of({ authenticated:false }))\n      ));\n\n      if(res.authenticated){\n        this.auth.setUser(res.user);\n        return true;\n      } else {\n        window.location.href = '/auth/google';\n        return false;\n      }\n    }catch{\n      window.location.href = '/auth/google';\n      return false;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}