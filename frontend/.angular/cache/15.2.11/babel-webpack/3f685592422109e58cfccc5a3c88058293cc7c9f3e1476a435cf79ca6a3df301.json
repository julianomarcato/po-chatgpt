{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./chat-gpt.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatGptComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ai_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ai_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ai_r1);\n  }\n}\nexport class ChatGptComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.prompt = '';\n    this.resposta = '';\n    this.aviso = '';\n    this.selectedAI = 'GPT';\n    this.availableAIs = ['GPT', 'DeepSeek', 'Gemini'];\n    this.loading = false;\n  }\n  ngOnInit() {}\n  enviarPrompt() {\n    if (!this.prompt) return;\n    this.loading = true;\n    this.aviso = '';\n    this.chatService.sendPrompt(this.prompt, this.selectedAI).subscribe({\n      next: res => {\n        this.loading = false;\n        this.resposta = res.resposta || '';\n        if (res.aviso) this.aviso = res.aviso;\n      },\n      error: err => {\n        this.loading = false;\n        this.aviso = 'Ocorreu um erro ao processar sua solicitação';\n      }\n    });\n  }\n  static {\n    this.ɵfac = function ChatGptComponent_Factory(t) {\n      return new (t || ChatGptComponent)(i0.ɵɵdirectiveInject(i1.ChatGptService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatGptComponent,\n      selectors: [[\"app-chat-gpt\"]],\n      decls: 6,\n      vars: 3,\n      consts: [[1, \"chat-container\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Digite sua pergunta\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"]],\n      template: function ChatGptComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Chat Multi-IA\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"select\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function ChatGptComponent_Template_select_ngModelChange_3_listener($event) {\n            return ctx.selectedAI = $event;\n          });\n          i0.ɵɵtemplate(4, ChatGptComponent_option_4_Template, 2, 2, \"option\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"textarea\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function ChatGptComponent_Template_textarea_ngModelChange_5_listener($event) {\n            return ctx.prompt = $event;\n          });\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedAI);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.availableAIs);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.prompt);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\".chat-container[_ngcontent-%COMP%] {\\n  max-width: 780px; margin: 32px auto; padding: 24px;\\n  background:#f9f9fb; border-radius:10px; box-shadow:0 6px 20px rgba(0,0,0,0.06);\\n  font-family: Inter, system-ui, -apple-system, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial;\\n}\\n.controls[_ngcontent-%COMP%] { display:flex; justify-content:flex-end; margin-bottom:8px; }\\nselect[_ngcontent-%COMP%] { padding:6px 10px; border-radius:6px; border:1px solid #d0d7de; }\\ntextarea[_ngcontent-%COMP%] { width:100%; min-height:120px; padding:12px; border-radius:8px; border:1px solid #dfe4ea; resize:vertical; }\\nbutton[_ngcontent-%COMP%] { margin-top:10px; padding:10px 14px; border-radius:8px; background:#2563eb; color:#fff; border:none; cursor:pointer; width:100%; }\\n.aviso[_ngcontent-%COMP%] { margin-top:12px; padding:10px; border-radius:6px; background:#fff3cd; color:#856404; font-weight:600; }\\n.resposta[_ngcontent-%COMP%] { margin-top:12px; padding:12px; background:#e6ffef; border-radius:8px; white-space:pre-wrap; }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhdC1ncHQvY2hhdC1ncHQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFFLGlCQUFpQixFQUFFLGFBQWE7RUFDbEQsa0JBQWtCLEVBQUUsa0JBQWtCLEVBQUUsc0NBQXNDO0VBQzlFLHlGQUF5RjtBQUMzRjtBQUNBLFlBQVksWUFBWSxFQUFFLHdCQUF3QixFQUFFLGlCQUFpQixFQUFFO0FBQ3ZFLFNBQVMsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsd0JBQXdCLEVBQUU7QUFDeEUsV0FBVyxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsWUFBWSxFQUFFLGlCQUFpQixFQUFFLHdCQUF3QixFQUFFLGVBQWUsRUFBRTtBQUNySCxTQUFTLGVBQWUsRUFBRSxpQkFBaUIsRUFBRSxpQkFBaUIsRUFBRSxrQkFBa0IsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLGNBQWMsRUFBRSxVQUFVLEVBQUU7QUFDekksU0FBUyxlQUFlLEVBQUUsWUFBWSxFQUFFLGlCQUFpQixFQUFFLGtCQUFrQixFQUFFLGFBQWEsRUFBRSxlQUFlLEVBQUU7QUFDL0csWUFBWSxlQUFlLEVBQUUsWUFBWSxFQUFFLGtCQUFrQixFQUFFLGlCQUFpQixFQUFFLG9CQUFvQixFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYXQtY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA3ODBweDsgbWFyZ2luOiAzMnB4IGF1dG87IHBhZGRpbmc6IDI0cHg7XG4gIGJhY2tncm91bmQ6I2Y5ZjlmYjsgYm9yZGVyLXJhZGl1czoxMHB4OyBib3gtc2hhZG93OjAgNnB4IDIwcHggcmdiYSgwLDAsMCwwLjA2KTtcbiAgZm9udC1mYW1pbHk6IEludGVyLCBzeXN0ZW0tdWksIC1hcHBsZS1zeXN0ZW0sIFwiU2Vnb2UgVUlcIiwgUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIEFyaWFsO1xufVxuLmNvbnRyb2xzIHsgZGlzcGxheTpmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQ7IG1hcmdpbi1ib3R0b206OHB4OyB9XG5zZWxlY3QgeyBwYWRkaW5nOjZweCAxMHB4OyBib3JkZXItcmFkaXVzOjZweDsgYm9yZGVyOjFweCBzb2xpZCAjZDBkN2RlOyB9XG50ZXh0YXJlYSB7IHdpZHRoOjEwMCU7IG1pbi1oZWlnaHQ6MTIwcHg7IHBhZGRpbmc6MTJweDsgYm9yZGVyLXJhZGl1czo4cHg7IGJvcmRlcjoxcHggc29saWQgI2RmZTRlYTsgcmVzaXplOnZlcnRpY2FsOyB9XG5idXR0b24geyBtYXJnaW4tdG9wOjEwcHg7IHBhZGRpbmc6MTBweCAxNHB4OyBib3JkZXItcmFkaXVzOjhweDsgYmFja2dyb3VuZDojMjU2M2ViOyBjb2xvcjojZmZmOyBib3JkZXI6bm9uZTsgY3Vyc29yOnBvaW50ZXI7IHdpZHRoOjEwMCU7IH1cbi5hdmlzbyB7IG1hcmdpbi10b3A6MTJweDsgcGFkZGluZzoxMHB4OyBib3JkZXItcmFkaXVzOjZweDsgYmFja2dyb3VuZDojZmZmM2NkOyBjb2xvcjojODU2NDA0OyBmb250LXdlaWdodDo2MDA7IH1cbi5yZXNwb3N0YSB7IG1hcmdpbi10b3A6MTJweDsgcGFkZGluZzoxMnB4OyBiYWNrZ3JvdW5kOiNlNmZmZWY7IGJvcmRlci1yYWRpdXM6OHB4OyB3aGl0ZS1zcGFjZTpwcmUtd3JhcDsgfVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;IAGIA,iCAAqD;IAAAA,YAAQ;IAAAA,iBAAS;;;;IAA9BA,6BAAY;IAACA,eAAQ;IAARA,2BAAQ;;;ACKjE,OAAM,MAAOC,gBAAgB;EAQ3BC,YAAoBC,WAA0B;IAA1B,gBAAW,GAAXA,WAAW;IAP/B,WAAM,GAAQ,EAAE;IAChB,aAAQ,GAAQ,EAAE;IAClB,UAAK,GAAQ,EAAE;IACf,eAAU,GAAQ,KAAK;IACvB,iBAAY,GAAU,CAAC,KAAK,EAAC,UAAU,EAAC,QAAQ,CAAC;IACjD,YAAO,GAAS,KAAK;EAE2B;EAEhDC,QAAQ,IAAQ;EAEhBC,YAAY;IACV,IAAG,CAAC,IAAI,CAACC,MAAM,EAAE;IACjB,IAAI,CAACC,OAAO,GAAC,IAAI;IACjB,IAAI,CAACC,KAAK,GAAC,EAAE;IACb,IAAI,CAACL,WAAW,CAACM,UAAU,CAAC,IAAI,CAACH,MAAM,EAAC,IAAI,CAACI,UAAU,CAAC,CAACC,SAAS,CAAC;MACjEC,IAAI,EAAEC,GAAO,IAAG;QACd,IAAI,CAACN,OAAO,GAAC,KAAK;QAClB,IAAI,CAACO,QAAQ,GAACD,GAAG,CAACC,QAAQ,IAAE,EAAE;QAC9B,IAAGD,GAAG,CAACL,KAAK,EAAE,IAAI,CAACA,KAAK,GAACK,GAAG,CAACL,KAAK;MACpC,CAAC;MACDO,KAAK,EAAEC,GAAG,IAAG;QACX,IAAI,CAACT,OAAO,GAAC,KAAK;QAClB,IAAI,CAACC,KAAK,GAAC,8CAA8C;MAC3D;KACD,CAAC;EACJ;;;uBA3BWP,gBAAgB;IAAA;EAAA;;;YAAhBA,gBAAgB;MAAAgB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDR7BrB,8BAA4B;UACtBA,6BAAa;UAAAA,iBAAK;UACtBA,iCAAiC;UAAzBA;YAAA;UAAA,EAAwB;UAC9BA,uEAAsE;UACxEA,iBAAS;UAETA,mCAAiE;UAAvDA;YAAA;UAAA,EAAoB;UAAmCA,iBAAW;;;UAJpEA,eAAwB;UAAxBA,wCAAwB;UACPA,eAAe;UAAfA,0CAAe;UAG9BA,eAAoB;UAApBA,oCAAoB","names":["i0","ChatGptComponent","constructor","chatService","ngOnInit","enviarPrompt","prompt","loading","aviso","sendPrompt","selectedAI","subscribe","next","res","resposta","error","err","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/chat-gpt/chat-gpt.component.html","/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/chat-gpt/chat-gpt.component.ts"],"sourcesContent":["<div class=\"chat-container\">\n  <h2>Chat Multi-IA</h2>\n  <select [(ngModel)]=\"selectedAI\">\n    <option *ngFor=\"let ai of availableAIs\" [value]=\"ai\">{{ ai }}</option>\n  </select>\n\n  <textarea [(ngModel)]=\"prompt\" placeholder=\"Digite sua pergunta\"></textarea>\n \n","import { Component, OnInit } from '@angular/core';\nimport { ChatGptService } from './chat-gpt.service';\n\n@Component({\n  selector: 'app-chat-gpt',\n  templateUrl: './chat-gpt.component.html',\n  styleUrls: ['./chat-gpt.component.css']\n})\nexport class ChatGptComponent implements OnInit {\n  prompt:string='';\n  resposta:string='';\n  aviso:string='';\n  selectedAI:string='GPT';\n  availableAIs:string[]=['GPT','DeepSeek','Gemini'];\n  loading:boolean=false;\n\n  constructor(private chatService:ChatGptService){}\n\n  ngOnInit():void{}\n\n  enviarPrompt():void{\n    if(!this.prompt) return;\n    this.loading=true;\n    this.aviso='';\n    this.chatService.sendPrompt(this.prompt,this.selectedAI).subscribe({\n      next:(res:any)=>{\n        this.loading=false;\n        this.resposta=res.resposta||'';\n        if(res.aviso) this.aviso=res.aviso;\n      },\n      error:(err)=>{\n        this.loading=false;\n        this.aviso='Ocorreu um erro ao processar sua solicitação';\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}