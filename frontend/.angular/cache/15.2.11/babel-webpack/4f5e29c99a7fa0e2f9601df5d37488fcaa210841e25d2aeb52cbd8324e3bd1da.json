{"ast":null,"code":"import { __decorate } from \"tslib\";\n// src/app/chat-gpt/chat-gpt.component.ts\nimport { Component } from '@angular/core';\nlet ChatGptComponent = class ChatGptComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.prompt = '';\n    this.resposta = '';\n    this.selectedAI = 'GPT'; // AI padrão\n    this.availableAIs = ['GPT', 'DeepSeek', 'Gemini'];\n  }\n  ngOnInit() {\n    // Aqui você pode carregar configs iniciais se precisar\n  }\n  enviarPrompt() {\n    if (!this.prompt) return;\n    this.chatService.sendPrompt(this.prompt, this.selectedAI).subscribe({\n      next: res => {\n        this.resposta = res.resposta;\n      },\n      error: err => console.error('Erro ao enviar prompt', err)\n    });\n  }\n};\nChatGptComponent = __decorate([Component({\n  selector: 'app-chat-gpt',\n  templateUrl: './chat-gpt.component.html',\n  styleUrls: ['./chat-gpt.component.css']\n})], ChatGptComponent);\nexport { ChatGptComponent };","map":{"version":3,"mappings":";AAAA;AACA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAO3BC,YAAoBC,WAA2B;IAA3B,gBAAW,GAAXA,WAAW;IAL/B,WAAM,GAAW,EAAE;IACnB,aAAQ,GAAW,EAAE;IACrB,eAAU,GAAW,KAAK,CAAC,CAAC;IAC5B,iBAAY,GAAa,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC;EAEH;EAEnDC,QAAQ;IACN;EAAA;EAGFC,YAAY;IACV,IAAI,CAAC,IAAI,CAACC,MAAM,EAAE;IAElB,IAAI,CAACH,WAAW,CAACI,UAAU,CAAC,IAAI,CAACD,MAAM,EAAE,IAAI,CAACE,UAAU,CAAC,CAACC,SAAS,CAAC;MAClEC,IAAI,EAAGC,GAAQ,IAAI;QACjB,IAAI,CAACC,QAAQ,GAAGD,GAAG,CAACC,QAAQ;MAC9B,CAAC;MACDC,KAAK,EAAGC,GAAQ,IAAKC,OAAO,CAACF,KAAK,CAAC,uBAAuB,EAAEC,GAAG;KAChE,CAAC;EACJ;CACD;AAvBYb,gBAAgB,eAL5BD,SAAS,CAAC;EACTgB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWjB,gBAAgB,CAuB5B;SAvBYA,gBAAgB","names":["Component","ChatGptComponent","constructor","chatService","ngOnInit","enviarPrompt","prompt","sendPrompt","selectedAI","subscribe","next","res","resposta","error","err","console","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/chat-gpt/chat-gpt.component.ts"],"sourcesContent":["// src/app/chat-gpt/chat-gpt.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { ChatGptService } from '../chat-gpt.service';\n\n@Component({\n  selector: 'app-chat-gpt',\n  templateUrl: './chat-gpt.component.html',\n  styleUrls: ['./chat-gpt.component.css']\n})\nexport class ChatGptComponent implements OnInit {\n\n  prompt: string = '';\n  resposta: string = '';\n  selectedAI: string = 'GPT'; // AI padrão\n  availableAIs: string[] = ['GPT', 'DeepSeek', 'Gemini'];\n\n  constructor(private chatService: ChatGptService) { }\n\n  ngOnInit(): void {\n    // Aqui você pode carregar configs iniciais se precisar\n  }\n\n  enviarPrompt(): void {\n    if (!this.prompt) return;\n\n    this.chatService.sendPrompt(this.prompt, this.selectedAI).subscribe({\n      next: (res: any) => {\n        this.resposta = res.resposta;\n      },\n      error: (err: any) => console.error('Erro ao enviar prompt', err)\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}