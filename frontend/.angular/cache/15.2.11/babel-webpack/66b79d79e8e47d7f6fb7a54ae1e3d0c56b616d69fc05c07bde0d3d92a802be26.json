{"ast":null,"code":"import { of } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.apiUrl = 'http://localhost:3000/api';\n    this.user = null;\n  }\n  isAuthenticated() {\n    return !!this.user;\n  }\n  checkUser() {\n    return this.http.get(`${this.apiUrl}/user`, {\n      withCredentials: true\n    }).pipe(tap(res => {\n      this.user = res.user;\n    }), catchError(err => {\n      this.user = null;\n      return of(null);\n    }));\n  }\n  loginGoogle() {\n    window.location.href = 'http://localhost:3000/auth/google';\n  }\n  logout() {\n    window.location.href = 'http://localhost:3000/logout';\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AAIA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,GAAG,EAAEC,UAAU,QAAQ,gBAAgB;;;;AAKhD,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAH5C,WAAM,GAAG,2BAA2B;IACrC,SAAI,GAAQ,IAAI;EAEwC;EAE/DC,eAAe;IACb,OAAO,CAAC,CAAC,IAAI,CAACC,IAAI;EACpB;EAEAC,SAAS;IACP,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,OAAO,EAAE;MAAEC,eAAe,EAAE;IAAI,CAAE,CAAC,CAACC,IAAI,CACzEZ,GAAG,CAAEa,GAAQ,IAAI;MAAG,IAAI,CAACN,IAAI,GAAGM,GAAG,CAACN,IAAI;IAAE,CAAC,CAAC,EAC5CN,UAAU,CAACa,GAAG,IAAG;MAAG,IAAI,CAACP,IAAI,GAAG,IAAI;MAAE,OAAOR,EAAE,CAAC,IAAI,CAAC;IAAE,CAAC,CAAC,CAC1D;EACH;EAEAgB,WAAW;IACTC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,mCAAmC;EAC5D;EAEAC,MAAM;IACJH,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,8BAA8B;EACvD;;;uBAvBWhB,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAkB,SAAXlB,WAAW;MAAAmB,YAFV;IAAM;EAAA","names":["of","tap","catchError","AuthService","constructor","http","router","isAuthenticated","user","checkUser","get","apiUrl","withCredentials","pipe","res","err","loginGoogle","window","location","href","logout","factory","providedIn"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/auth.service.ts"],"sourcesContent":["// src/app/auth.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:3000/api';\n  public user: any = null;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  isAuthenticated(): boolean {\n    return !!this.user;\n  }\n\n  checkUser(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/user`, { withCredentials: true }).pipe(\n      tap((res: any) => { this.user = res.user; }),\n      catchError(err => { this.user = null; return of(null); })\n    );\n  }\n\n  loginGoogle(): void {\n    window.location.href = 'http://localhost:3000/auth/google';\n  }\n\n  logout(): void {\n    window.location.href = 'http://localhost:3000/logout';\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}