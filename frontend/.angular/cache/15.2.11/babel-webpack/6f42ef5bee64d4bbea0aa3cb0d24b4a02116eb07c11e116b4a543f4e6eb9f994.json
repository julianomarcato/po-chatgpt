{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChatGptService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAvailableAIs() {\n    return this.http.get('/api/ais', {\n      withCredentials: true\n    });\n  }\n  sendPrompt(prompt, ai) {\n    return this.http.post('/api/prompt', {\n      prompt,\n      ai\n    }, {\n      withCredentials: true\n    });\n  }\n  static {\n    this.ɵfac = function ChatGptService_Factory(t) {\n      return new (t || ChatGptService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ChatGptService,\n      factory: ChatGptService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,eAAe;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAoB,UAAU,EAAE;MAAEC,eAAe,EAAE;IAAI,CAAE,CAAC;EAChF;EAEAC,UAAU,CAACC,MAAc,EAAEC,EAAU;IACnC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAuB,aAAa,EAAE;MAAEF,MAAM;MAAEC;IAAE,CAAE,EAAE;MAAEH,eAAe,EAAE;IAAI,CAAE,CAAC;EACvG;;;uBAVWL,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAU,SAAdV,cAAc;MAAAW,YAFb;IAAM;EAAA","names":["ChatGptService","constructor","http","getAvailableAIs","get","withCredentials","sendPrompt","prompt","ai","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/chat-gpt/chat-gpt.service.ts"],"sourcesContent":["// src/app/chat-gpt/chat-gpt.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatGptService {\n\n  constructor(private http: HttpClient) {}\n\n  getAvailableAIs(): Observable<{ ais: string[] }> {\n    return this.http.get<{ ais: string[] }>('/api/ais', { withCredentials: true });\n  }\n\n  sendPrompt(prompt: string, ai: string): Observable<{ resposta: string }> {\n    return this.http.post<{ resposta: string }>('/api/prompt', { prompt, ai }, { withCredentials: true });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}