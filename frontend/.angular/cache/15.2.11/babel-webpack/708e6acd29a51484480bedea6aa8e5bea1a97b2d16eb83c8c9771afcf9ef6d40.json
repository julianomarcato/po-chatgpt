{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChatGptService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000/api';\n  }\n  getSession() {\n    return this.http.get(`${this.baseUrl}/test-session`, {\n      withCredentials: true\n    });\n  }\n  getAvailableAIs() {\n    return this.http.get(`${this.baseUrl}/ais`, {\n      withCredentials: true\n    });\n  }\n  enviarPrompt(prompt, ai) {\n    return this.http.post(`${this.baseUrl}/prompt`, {\n      prompt,\n      ai\n    }, {\n      withCredentials: true\n    });\n  }\n  static {\n    this.ɵfac = function ChatGptService_Factory(t) {\n      return new (t || ChatGptService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ChatGptService,\n      factory: ChatGptService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAKA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,2BAA2B;EAEN;EAEvCC,UAAU;IAAsB,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,GAAG,IAAI,CAACC,OAAO,eAAe,EAAE;MAAEC,eAAe,EAAE;IAAI,CAAE,CAAC;EAAE;EACtHC,eAAe;IAAsB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAM,GAAG,IAAI,CAACC,OAAO,MAAM,EAAE;MAAEC,eAAe,EAAE;IAAI,CAAE,CAAC;EAAE;EAClHE,YAAY,CAACC,MAAc,EAAEC,EAAU;IAAqB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAM,GAAG,IAAI,CAACN,OAAO,SAAS,EAAE;MAAEI,MAAM;MAAEC;IAAE,CAAE,EAAE;MAAEJ,eAAe,EAAE;IAAI,CAAE,CAAC;EAAE;;;uBAPlJN,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAY,SAAdZ,cAAc;MAAAa,YADD;IAAM;EAAA","names":["ChatGptService","constructor","http","getSession","get","baseUrl","withCredentials","getAvailableAIs","enviarPrompt","prompt","ai","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/chat-gpt/chat-gpt.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class ChatGptService {\n  private baseUrl = 'http://localhost:3000/api';\n\n  constructor(private http: HttpClient) {}\n\n  getSession(): Observable<any> { return this.http.get<any>(`${this.baseUrl}/test-session`, { withCredentials: true }); }\n  getAvailableAIs(): Observable<any> { return this.http.get<any>(`${this.baseUrl}/ais`, { withCredentials: true }); }\n  enviarPrompt(prompt: string, ai: string): Observable<any> { return this.http.post<any>(`${this.baseUrl}/prompt`, { prompt, ai }, { withCredentials: true }); }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}