{"ast":null,"code":"import _asyncToGenerator from \"/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const res = yield _this.authService.checkAuth().toPromise();\n        _this.authService.user = res.user;\n        return true;\n      } catch (err) {\n        window.location.href = 'http://localhost:3000/auth/google';\n        return false;\n      }\n    })();\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;;;AAKA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEjEC,WAAW;IAAA;IAAA;MACf,IAAI;QACF,MAAMC,GAAG,SAAc,KAAI,CAACH,WAAW,CAACI,SAAS,EAAE,CAACC,SAAS,EAAE;QAC/D,KAAI,CAACL,WAAW,CAACM,IAAI,GAAGH,GAAG,CAACG,IAAI;QAChC,OAAO,IAAI;OACZ,CAAC,OAAOC,GAAG,EAAE;QACZC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,mCAAmC;QAC1D,OAAO,KAAK;;IACb;EACH;;;uBAZWZ,SAAS;IAAA;EAAA;;;aAATA,SAAS;MAAAa,SAATb,SAAS;MAAAc,YADI;IAAM;EAAA","names":["AuthGuard","constructor","authService","router","canActivate","res","checkAuth","toPromise","user","err","window","location","href","factory","providedIn"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate(): Promise<boolean> {\n    try {\n      const res: any = await this.authService.checkAuth().toPromise();\n      this.authService.user = res.user;\n      return true;\n    } catch (err) {\n      window.location.href = 'http://localhost:3000/auth/google';\n      return false;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}