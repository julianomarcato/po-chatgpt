{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./chat-gpt.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatGptComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ai_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ai_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 2, ai_r3));\n  }\n}\nfunction ChatGptComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.aviso);\n  }\n}\nfunction ChatGptComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"pre\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.resposta);\n  }\n}\nexport class ChatGptComponent {\n  constructor(chat) {\n    this.chat = chat;\n    this.prompt = '';\n    this.resposta = '';\n    this.selectedAI = 'gemini';\n    this.availableAIs = ['gpt', 'deepseek', 'gemini'];\n    this.loading = false;\n    this.aviso = '';\n  }\n  ngOnInit() {}\n  enviarPrompt() {\n    if (!this.prompt.trim() || !this.selectedAI) {\n      this.aviso = 'Informe prompt e escolha a IA.';\n      return;\n    }\n    this.loading = true;\n    this.aviso = '';\n    this.resposta = '';\n    this.chat.sendPrompt(this.prompt, this.selectedAI.toLowerCase()).subscribe({\n      next: res => {\n        if (res?.aviso) {\n          this.aviso = res.aviso;\n        } else if (res?.error) {\n          this.aviso = res.error;\n        } else {\n          this.resposta = res.resposta;\n        }\n        this.loading = false;\n      },\n      error: err => {\n        console.error('Erro do POST /api/prompt', err);\n        this.aviso = err.error?.aviso || err.error?.error || 'Ocorreu um erro ao processar sua solicitação';\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function ChatGptComponent_Factory(t) {\n      return new (t || ChatGptComponent)(i0.ɵɵdirectiveInject(i1.ChatGptService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatGptComponent,\n      selectors: [[\"app-chat-gpt\"]],\n      decls: 11,\n      vars: 7,\n      consts: [[1, \"chat-container\"], [1, \"controls\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Digite sua pergunta...\", 3, \"ngModel\", \"ngModelChange\"], [3, \"disabled\", \"click\"], [\"class\", \"aviso\", 4, \"ngIf\"], [\"class\", \"resposta\", 4, \"ngIf\"], [3, \"value\"], [1, \"aviso\"], [1, \"resposta\"]],\n      template: function ChatGptComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"\\uD83D\\uDCAC Chat Multi-IA\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"select\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function ChatGptComponent_Template_select_ngModelChange_4_listener($event) {\n            return ctx.selectedAI = $event;\n          });\n          i0.ɵɵtemplate(5, ChatGptComponent_option_5_Template, 3, 4, \"option\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"textarea\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function ChatGptComponent_Template_textarea_ngModelChange_6_listener($event) {\n            return ctx.prompt = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function ChatGptComponent_Template_button_click_7_listener() {\n            return ctx.enviarPrompt();\n          });\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, ChatGptComponent_div_9_Template, 2, 1, \"div\", 6);\n          i0.ɵɵtemplate(10, ChatGptComponent_div_10_Template, 3, 1, \"div\", 7);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedAI);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.availableAIs);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.prompt);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate(ctx.loading ? \"Enviando...\" : \"Enviar\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.aviso);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.resposta);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i2.TitleCasePipe],\n      styles: [\".chat-container[_ngcontent-%COMP%] {\\n  max-width: 780px; margin: 32px auto; padding: 24px;\\n  background:#f9f9fb; border-radius:10px; box-shadow:0 6px 20px rgba(0,0,0,0.06);\\n  font-family: Inter, system-ui, -apple-system, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial;\\n}\\n.controls[_ngcontent-%COMP%] { display:flex; justify-content:flex-end; margin-bottom:8px; }\\nselect[_ngcontent-%COMP%] { padding:6px 10px; border-radius:6px; border:1px solid #d0d7de; }\\ntextarea[_ngcontent-%COMP%] { width:100%; min-height:120px; padding:12px; border-radius:8px; border:1px solid #dfe4ea; resize:vertical; }\\nbutton[_ngcontent-%COMP%] { margin-top:10px; padding:10px 14px; border-radius:8px; background:#2563eb; color:#fff; border:none; cursor:pointer; width:100%; }\\n.aviso[_ngcontent-%COMP%] { margin-top:12px; padding:10px; border-radius:6px; background:#fff3cd; color:#856404; font-weight:600; }\\n.resposta[_ngcontent-%COMP%] { margin-top:12px; padding:12px; background:#e6ffef; border-radius:8px; white-space:pre-wrap; }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhdC1ncHQvY2hhdC1ncHQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFFLGlCQUFpQixFQUFFLGFBQWE7RUFDbEQsa0JBQWtCLEVBQUUsa0JBQWtCLEVBQUUsc0NBQXNDO0VBQzlFLHlGQUF5RjtBQUMzRjtBQUNBLFlBQVksWUFBWSxFQUFFLHdCQUF3QixFQUFFLGlCQUFpQixFQUFFO0FBQ3ZFLFNBQVMsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsd0JBQXdCLEVBQUU7QUFDeEUsV0FBVyxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsWUFBWSxFQUFFLGlCQUFpQixFQUFFLHdCQUF3QixFQUFFLGVBQWUsRUFBRTtBQUNySCxTQUFTLGVBQWUsRUFBRSxpQkFBaUIsRUFBRSxpQkFBaUIsRUFBRSxrQkFBa0IsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLGNBQWMsRUFBRSxVQUFVLEVBQUU7QUFDekksU0FBUyxlQUFlLEVBQUUsWUFBWSxFQUFFLGlCQUFpQixFQUFFLGtCQUFrQixFQUFFLGFBQWEsRUFBRSxlQUFlLEVBQUU7QUFDL0csWUFBWSxlQUFlLEVBQUUsWUFBWSxFQUFFLGtCQUFrQixFQUFFLGlCQUFpQixFQUFFLG9CQUFvQixFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYXQtY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA3ODBweDsgbWFyZ2luOiAzMnB4IGF1dG87IHBhZGRpbmc6IDI0cHg7XG4gIGJhY2tncm91bmQ6I2Y5ZjlmYjsgYm9yZGVyLXJhZGl1czoxMHB4OyBib3gtc2hhZG93OjAgNnB4IDIwcHggcmdiYSgwLDAsMCwwLjA2KTtcbiAgZm9udC1mYW1pbHk6IEludGVyLCBzeXN0ZW0tdWksIC1hcHBsZS1zeXN0ZW0sIFwiU2Vnb2UgVUlcIiwgUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIEFyaWFsO1xufVxuLmNvbnRyb2xzIHsgZGlzcGxheTpmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQ7IG1hcmdpbi1ib3R0b206OHB4OyB9XG5zZWxlY3QgeyBwYWRkaW5nOjZweCAxMHB4OyBib3JkZXItcmFkaXVzOjZweDsgYm9yZGVyOjFweCBzb2xpZCAjZDBkN2RlOyB9XG50ZXh0YXJlYSB7IHdpZHRoOjEwMCU7IG1pbi1oZWlnaHQ6MTIwcHg7IHBhZGRpbmc6MTJweDsgYm9yZGVyLXJhZGl1czo4cHg7IGJvcmRlcjoxcHggc29saWQgI2RmZTRlYTsgcmVzaXplOnZlcnRpY2FsOyB9XG5idXR0b24geyBtYXJnaW4tdG9wOjEwcHg7IHBhZGRpbmc6MTBweCAxNHB4OyBib3JkZXItcmFkaXVzOjhweDsgYmFja2dyb3VuZDojMjU2M2ViOyBjb2xvcjojZmZmOyBib3JkZXI6bm9uZTsgY3Vyc29yOnBvaW50ZXI7IHdpZHRoOjEwMCU7IH1cbi5hdmlzbyB7IG1hcmdpbi10b3A6MTJweDsgcGFkZGluZzoxMHB4OyBib3JkZXItcmFkaXVzOjZweDsgYmFja2dyb3VuZDojZmZmM2NkOyBjb2xvcjojODU2NDA0OyBmb250LXdlaWdodDo2MDA7IH1cbi5yZXNwb3N0YSB7IG1hcmdpbi10b3A6MTJweDsgcGFkZGluZzoxMnB4OyBiYWNrZ3JvdW5kOiNlNmZmZWY7IGJvcmRlci1yYWRpdXM6OHB4OyB3aGl0ZS1zcGFjZTpwcmUtd3JhcDsgfVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;IAKMA,iCAAqD;IAAAA,YAAoB;;IAAAA,iBAAS;;;;IAA1CA,6BAAY;IAACA,eAAoB;IAApBA,iDAAoB;;;;;IAO7EA,8BAAiC;IAAAA,YAAW;IAAAA,iBAAM;;;;IAAjBA,eAAW;IAAXA,kCAAW;;;;;IAC5CA,+BAAuC;IAAKA,YAAc;IAAAA,iBAAM;;;;IAApBA,eAAc;IAAdA,qCAAc;;;ACL5D,OAAM,MAAOC,gBAAgB;EAQ3BC,YAAoBC,IAAoB;IAApB,SAAI,GAAJA,IAAI;IAPxB,WAAM,GAAG,EAAE;IACX,aAAQ,GAAG,EAAE;IACb,eAAU,GAAG,QAAQ;IACrB,iBAAY,GAAG,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC;IAC5C,YAAO,GAAG,KAAK;IACf,UAAK,GAAG,EAAE;EAEiC;EAE3CC,QAAQ,IAAU;EAElBC,YAAY;IACV,IAAI,CAAC,IAAI,CAACC,MAAM,CAACC,IAAI,EAAE,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;MAC3C,IAAI,CAACC,KAAK,GAAG,gCAAgC;MAC7C;;IAEF,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACD,KAAK,GAAG,EAAE;IACf,IAAI,CAACE,QAAQ,GAAG,EAAE;IAElB,IAAI,CAACR,IAAI,CAACS,UAAU,CAAC,IAAI,CAACN,MAAM,EAAE,IAAI,CAACE,UAAU,CAACK,WAAW,EAAE,CAAC,CAACC,SAAS,CAAC;MACzEC,IAAI,EAAGC,GAAQ,IAAI;QACjB,IAAIA,GAAG,EAAEP,KAAK,EAAE;UACd,IAAI,CAACA,KAAK,GAAGO,GAAG,CAACP,KAAK;SACvB,MAAM,IAAIO,GAAG,EAAEC,KAAK,EAAE;UACrB,IAAI,CAACR,KAAK,GAAGO,GAAG,CAACC,KAAK;SACvB,MAAM;UACL,IAAI,CAACN,QAAQ,GAAGK,GAAG,CAACL,QAAQ;;QAE9B,IAAI,CAACD,OAAO,GAAG,KAAK;MACtB,CAAC;MACDO,KAAK,EAAGC,GAAQ,IAAI;QAClBC,OAAO,CAACF,KAAK,CAAC,0BAA0B,EAAEC,GAAG,CAAC;QAC9C,IAAI,CAACT,KAAK,GAAGS,GAAG,CAACD,KAAK,EAAER,KAAK,IAAIS,GAAG,CAACD,KAAK,EAAEA,KAAK,IAAI,8CAA8C;QACnG,IAAI,CAACP,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;;;uBAtCWT,gBAAgB;IAAA;EAAA;;;YAAhBA,gBAAgB;MAAAmB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDR7BxB,8BAA4B;UACtBA,0CAAgB;UAAAA,iBAAK;UAEzBA,8BAAsB;UACZA;YAAA;UAAA,EAAwB;UAC9BA,uEAAkF;UACpFA,iBAAS;UAGXA,mCAAoE;UAA1DA;YAAA;UAAA,EAAoB;UAAsCA,iBAAW;UAC/EA,iCAAsD;UAA9CA;YAAA,OAASyB,kBAAc;UAAA,EAAC;UAAsBzB,YAAwC;UAAAA,iBAAS;UAEvGA,iEAAkD;UAClDA,mEAAsE;UACxEA,iBAAM;;;UAVMA,eAAwB;UAAxBA,wCAAwB;UACPA,eAAe;UAAfA,0CAAe;UAIhCA,eAAoB;UAApBA,oCAAoB;UACGA,eAAoB;UAApBA,sCAAoB;UAACA,eAAwC;UAAxCA,4DAAwC;UAExFA,eAAW;UAAXA,gCAAW;UACXA,eAAc;UAAdA,mCAAc","names":["i0","ChatGptComponent","constructor","chat","ngOnInit","enviarPrompt","prompt","trim","selectedAI","aviso","loading","resposta","sendPrompt","toLowerCase","subscribe","next","res","error","err","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/chat-gpt/chat-gpt.component.html","/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/chat-gpt/chat-gpt.component.ts"],"sourcesContent":["<div class=\"chat-container\">\n  <h2>💬 Chat Multi-IA</h2>\n\n  <div class=\"controls\">\n    <select [(ngModel)]=\"selectedAI\">\n      <option *ngFor=\"let ai of availableAIs\" [value]=\"ai\">{{ ai | titlecase }}</option>\n    </select>\n  </div>\n\n  <textarea [(ngModel)]=\"prompt\" placeholder=\"Digite sua pergunta...\"></textarea>\n  <button (click)=\"enviarPrompt()\" [disabled]=\"loading\">{{ loading ? 'Enviando...' : 'Enviar' }}</button>\n\n  <div *ngIf=\"aviso\" class=\"aviso\">{{ aviso }}</div>\n  <div *ngIf=\"resposta\" class=\"resposta\"><pre>{{ resposta }}</pre></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ChatGptService } from './chat-gpt.service';\n\n@Component({\n  selector: 'app-chat-gpt',\n  templateUrl: './chat-gpt.component.html',\n  styleUrls: ['./chat-gpt.component.css']\n})\nexport class ChatGptComponent implements OnInit {\n  prompt = '';\n  resposta = '';\n  selectedAI = 'gemini';\n  availableAIs = ['gpt', 'deepseek', 'gemini'];\n  loading = false;\n  aviso = '';\n\n  constructor(private chat: ChatGptService) {}\n\n  ngOnInit(): void {}\n\n  enviarPrompt(): void {\n    if (!this.prompt.trim() || !this.selectedAI) {\n      this.aviso = 'Informe prompt e escolha a IA.';\n      return;\n    }\n    this.loading = true;\n    this.aviso = '';\n    this.resposta = '';\n\n    this.chat.sendPrompt(this.prompt, this.selectedAI.toLowerCase()).subscribe({\n      next: (res: any) => {\n        if (res?.aviso) {\n          this.aviso = res.aviso;\n        } else if (res?.error) {\n          this.aviso = res.error;\n        } else {\n          this.resposta = res.resposta;\n        }\n        this.loading = false;\n      },\n      error: (err: any) => {\n        console.error('Erro do POST /api/prompt', err);\n        this.aviso = err.error?.aviso || err.error?.error || 'Ocorreu um erro ao processar sua solicitação';\n        this.loading = false;\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}