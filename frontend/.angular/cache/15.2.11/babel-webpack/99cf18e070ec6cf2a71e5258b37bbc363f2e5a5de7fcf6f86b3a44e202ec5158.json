{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./chat-gpt.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatGptComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ai_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ai_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ai_r3);\n  }\n}\nfunction ChatGptComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.aviso);\n  }\n}\nfunction ChatGptComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.resposta);\n  }\n}\nexport class ChatGptComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.prompt = '';\n    this.resposta = '';\n    this.selectedAI = 'GPT';\n    this.availableAIs = ['GPT', 'Gemini', 'DeepSeek'];\n    this.loading = false;\n    this.aviso = '';\n  }\n  ngOnInit() {}\n  enviarPrompt() {\n    if (!this.prompt) return;\n    this.loading = true;\n    this.aviso = '';\n    this.chatService.sendPrompt(this.prompt, this.selectedAI).subscribe({\n      next: res => {\n        this.resposta = res.resposta;\n        this.loading = false;\n      },\n      error: err => {\n        console.error('❌ Erro no prompt:', err);\n        this.aviso = err.error?.error || 'Ocorreu um erro ao processar sua solicitação';\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function ChatGptComponent_Factory(t) {\n      return new (t || ChatGptComponent)(i0.ɵɵdirectiveInject(i1.ChatGptService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatGptComponent,\n      selectors: [[\"app-chat-gpt\"]],\n      decls: 10,\n      vars: 7,\n      consts: [[1, \"chat-container\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Digite sua pergunta\", 3, \"ngModel\", \"ngModelChange\"], [3, \"disabled\", \"click\"], [\"class\", \"aviso\", 4, \"ngIf\"], [\"class\", \"resposta\", 4, \"ngIf\"], [3, \"value\"], [1, \"aviso\"], [1, \"resposta\"]],\n      template: function ChatGptComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Chat com IA\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"select\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function ChatGptComponent_Template_select_ngModelChange_3_listener($event) {\n            return ctx.selectedAI = $event;\n          });\n          i0.ɵɵtemplate(4, ChatGptComponent_option_4_Template, 2, 2, \"option\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"textarea\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function ChatGptComponent_Template_textarea_ngModelChange_5_listener($event) {\n            return ctx.prompt = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function ChatGptComponent_Template_button_click_6_listener() {\n            return ctx.enviarPrompt();\n          });\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(8, ChatGptComponent_div_8_Template, 2, 1, \"div\", 5);\n          i0.ɵɵtemplate(9, ChatGptComponent_div_9_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedAI);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.availableAIs);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.prompt);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Enviando...\" : \"Enviar\", \" \");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.aviso);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.resposta);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\".chat-container[_ngcontent-%COMP%]{\\n  max-width:600px;\\n  margin:50px auto;\\n  display:flex;\\n  flex-direction:column;\\n  gap:10px;\\n  padding:20px;\\n  background:#f4f4f9;\\n  border-radius:10px;\\n  box-shadow:0 4px 10px rgba(0,0,0,0.1);\\n}\\n\\ntextarea[_ngcontent-%COMP%]{ width:100%; height:100px; padding:10px; border-radius:5px; border:1px solid #ccc; }\\nselect[_ngcontent-%COMP%], button[_ngcontent-%COMP%]{ padding:10px; border-radius:5px; border:1px solid #ccc; }\\nbutton[_ngcontent-%COMP%]{ background:#007bff; color:#fff; cursor:pointer; }\\nbutton[disabled][_ngcontent-%COMP%]{ background:#999; cursor:not-allowed; }\\n.aviso[_ngcontent-%COMP%]{ color:red; font-weight:bold; }\\n.resposta[_ngcontent-%COMP%]{ background:#fff; padding:10px; border-radius:5px; border:1px solid #ccc; white-space:pre-wrap; }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhdC1ncHQvY2hhdC1ncHQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLHFCQUFxQjtFQUNyQixRQUFRO0VBQ1IsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIscUNBQXFDO0FBQ3ZDOztBQUVBLFVBQVUsVUFBVSxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsaUJBQWlCLEVBQUUscUJBQXFCLEVBQUU7QUFDNUYsZ0JBQWdCLFlBQVksRUFBRSxpQkFBaUIsRUFBRSxxQkFBcUIsRUFBRTtBQUN4RSxRQUFRLGtCQUFrQixFQUFFLFVBQVUsRUFBRSxjQUFjLEVBQUU7QUFDeEQsa0JBQWtCLGVBQWUsRUFBRSxrQkFBa0IsRUFBRTtBQUN2RCxRQUFRLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRTtBQUNyQyxXQUFXLGVBQWUsRUFBRSxZQUFZLEVBQUUsaUJBQWlCLEVBQUUscUJBQXFCLEVBQUUsb0JBQW9CLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhdC1jb250YWluZXJ7XG4gIG1heC13aWR0aDo2MDBweDtcbiAgbWFyZ2luOjUwcHggYXV0bztcbiAgZGlzcGxheTpmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjpjb2x1bW47XG4gIGdhcDoxMHB4O1xuICBwYWRkaW5nOjIwcHg7XG4gIGJhY2tncm91bmQ6I2Y0ZjRmOTtcbiAgYm9yZGVyLXJhZGl1czoxMHB4O1xuICBib3gtc2hhZG93OjAgNHB4IDEwcHggcmdiYSgwLDAsMCwwLjEpO1xufVxuXG50ZXh0YXJlYXsgd2lkdGg6MTAwJTsgaGVpZ2h0OjEwMHB4OyBwYWRkaW5nOjEwcHg7IGJvcmRlci1yYWRpdXM6NXB4OyBib3JkZXI6MXB4IHNvbGlkICNjY2M7IH1cbnNlbGVjdCwgYnV0dG9ueyBwYWRkaW5nOjEwcHg7IGJvcmRlci1yYWRpdXM6NXB4OyBib3JkZXI6MXB4IHNvbGlkICNjY2M7IH1cbmJ1dHRvbnsgYmFja2dyb3VuZDojMDA3YmZmOyBjb2xvcjojZmZmOyBjdXJzb3I6cG9pbnRlcjsgfVxuYnV0dG9uW2Rpc2FibGVkXXsgYmFja2dyb3VuZDojOTk5OyBjdXJzb3I6bm90LWFsbG93ZWQ7IH1cbi5hdmlzb3sgY29sb3I6cmVkOyBmb250LXdlaWdodDpib2xkOyB9XG4ucmVzcG9zdGF7IGJhY2tncm91bmQ6I2ZmZjsgcGFkZGluZzoxMHB4OyBib3JkZXItcmFkaXVzOjVweDsgYm9yZGVyOjFweCBzb2xpZCAjY2NjOyB3aGl0ZS1zcGFjZTpwcmUtd3JhcDsgfVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;IAIIA,iCAAqD;IAAAA,YAAQ;IAAAA,iBAAS;;;;IAA9BA,6BAAY;IAACA,eAAQ;IAARA,2BAAQ;;;;;IAS/DA,8BAAiC;IAAAA,YAAW;IAAAA,iBAAM;;;;IAAjBA,eAAW;IAAXA,kCAAW;;;;;IAC5CA,8BAAuC;IAAAA,YAAc;IAAAA,iBAAM;;;;IAApBA,eAAc;IAAdA,qCAAc;;;ACNvD,OAAM,MAAOC,gBAAgB;EAQ3BC,YAAoBC,WAA2B;IAA3B,gBAAW,GAAXA,WAAW;IAP/B,WAAM,GAAW,EAAE;IACnB,aAAQ,GAAW,EAAE;IACrB,eAAU,GAAW,KAAK;IAC1B,iBAAY,GAAa,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC;IACtD,YAAO,GAAY,KAAK;IACxB,UAAK,GAAW,EAAE;EAEgC;EAElDC,QAAQ,IAAU;EAElBC,YAAY;IACV,IAAI,CAAC,IAAI,CAACC,MAAM,EAAE;IAElB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,KAAK,GAAG,EAAE;IAEf,IAAI,CAACL,WAAW,CAACM,UAAU,CAAC,IAAI,CAACH,MAAM,EAAE,IAAI,CAACI,UAAU,CAAC,CAACC,SAAS,CAAC;MAClEC,IAAI,EAAGC,GAAQ,IAAI;QACjB,IAAI,CAACC,QAAQ,GAAGD,GAAG,CAACC,QAAQ;QAC5B,IAAI,CAACP,OAAO,GAAG,KAAK;MACtB,CAAC;MACDQ,KAAK,EAAGC,GAAQ,IAAI;QAClBC,OAAO,CAACF,KAAK,CAAC,mBAAmB,EAAEC,GAAG,CAAC;QACvC,IAAI,CAACR,KAAK,GAAGQ,GAAG,CAACD,KAAK,EAAEA,KAAK,IAAI,8CAA8C;QAC/E,IAAI,CAACR,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;;;uBA7BWN,gBAAgB;IAAA;EAAA;;;YAAhBA,gBAAgB;MAAAiB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDR7BtB,8BAA4B;UACtBA,2BAAW;UAAAA,iBAAK;UAEpBA,iCAAiC;UAAzBA;YAAA;UAAA,EAAwB;UAC9BA,uEAAsE;UACxEA,iBAAS;UAETA,mCAAiE;UAAvDA;YAAA;UAAA,EAAoB;UAAmCA,iBAAW;UAE5EA,iCAAsD;UAA9CA;YAAA,OAASuB,kBAAc;UAAA,EAAC;UAC9BvB,YACF;UAAAA,iBAAS;UAETA,iEAAkD;UAClDA,iEAA2D;UAC7DA,iBAAM;;;UAZIA,eAAwB;UAAxBA,wCAAwB;UACPA,eAAe;UAAfA,0CAAe;UAG9BA,eAAoB;UAApBA,oCAAoB;UAEGA,eAAoB;UAApBA,sCAAoB;UACnDA,eACF;UADEA,uEACF;UAEMA,eAAW;UAAXA,gCAAW;UACXA,eAAc;UAAdA,mCAAc","names":["i0","ChatGptComponent","constructor","chatService","ngOnInit","enviarPrompt","prompt","loading","aviso","sendPrompt","selectedAI","subscribe","next","res","resposta","error","err","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/chat-gpt/chat-gpt.component.html","/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/chat-gpt/chat-gpt.component.ts"],"sourcesContent":["<div class=\"chat-container\">\n  <h2>Chat com IA</h2>\n\n  <select [(ngModel)]=\"selectedAI\">\n    <option *ngFor=\"let ai of availableAIs\" [value]=\"ai\">{{ ai }}</option>\n  </select>\n\n  <textarea [(ngModel)]=\"prompt\" placeholder=\"Digite sua pergunta\"></textarea>\n\n  <button (click)=\"enviarPrompt()\" [disabled]=\"loading\">\n    {{ loading ? 'Enviando...' : 'Enviar' }}\n  </button>\n\n  <div *ngIf=\"aviso\" class=\"aviso\">{{ aviso }}</div>\n  <div *ngIf=\"resposta\" class=\"resposta\">{{ resposta }}</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ChatGptService } from './chat-gpt.service';\n\n@Component({\n  selector: 'app-chat-gpt',\n  templateUrl: './chat-gpt.component.html',\n  styleUrls: ['./chat-gpt.component.css']\n})\nexport class ChatGptComponent implements OnInit {\n  prompt: string = '';\n  resposta: string = '';\n  selectedAI: string = 'GPT';\n  availableAIs: string[] = ['GPT', 'Gemini', 'DeepSeek'];\n  loading: boolean = false;\n  aviso: string = '';\n\n  constructor(private chatService: ChatGptService) {}\n\n  ngOnInit(): void {}\n\n  enviarPrompt(): void {\n    if (!this.prompt) return;\n\n    this.loading = true;\n    this.aviso = '';\n\n    this.chatService.sendPrompt(this.prompt, this.selectedAI).subscribe({\n      next: (res: any) => {\n        this.resposta = res.resposta;\n        this.loading = false;\n      },\n      error: (err: any) => {\n        console.error('❌ Erro no prompt:', err);\n        this.aviso = err.error?.error || 'Ocorreu um erro ao processar sua solicitação';\n        this.loading = false;\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}