{"ast":null,"code":"import { of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  }\n  canActivate() {\n    return this.http.get('/api/user', {\n      withCredentials: true\n    }).pipe(map(res => {\n      if (res.authenticated) return true;\n      this.router.navigate(['/login']);\n      return false;\n    }), catchError(() => {\n      this.router.navigate(['/login']);\n      return of(false);\n    }));\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AAIA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,GAAG,EAAEC,UAAU,QAAQ,gBAAgB;;;;AAKhD,OAAM,MAAOC,SAAS;EAEpBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;EAAW;EAE/DC,WAAW;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAA6B,WAAW,EAAE;MAAEC,eAAe,EAAE;IAAI,CAAE,CAAC,CAACC,IAAI,CAC3FT,GAAG,CAACU,GAAG,IAAG;MACR,IAAIA,GAAG,CAACC,aAAa,EAAE,OAAO,IAAI;MAClC,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;IACd,CAAC,CAAC,EACFX,UAAU,CAAC,MAAK;MACd,IAAI,CAACI,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAOb,EAAE,CAAC,KAAK,CAAC;IAClB,CAAC,CAAC,CACH;EACH;;;uBAhBWG,SAAS;IAAA;EAAA;;;aAATA,SAAS;MAAAW,SAATX,SAAS;MAAAY,YAFR;IAAM;EAAA","names":["of","map","catchError","AuthGuard","constructor","http","router","canActivate","get","withCredentials","pipe","res","authenticated","navigate","factory","providedIn"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/auth.guard.ts"],"sourcesContent":["// src/app/auth.guard.ts\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  canActivate(): Observable<boolean> {\n    return this.http.get<{ authenticated: boolean }>('/api/user', { withCredentials: true }).pipe(\n      map(res => {\n        if (res.authenticated) return true;\n        this.router.navigate(['/login']);\n        return false;\n      }),\n      catchError(() => {\n        this.router.navigate(['/login']);\n        return of(false);\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}