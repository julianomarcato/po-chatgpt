{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChatGptService {\n  constructor(http) {\n    this.http = http;\n  }\n  // Método para enviar prompt para o backend\n  sendPrompt(prompt, selectedAI) {\n    const url = '/api/prompt-free'; // ou '/api/prompt' se estiver usando a versão paga\n    return this.http.post(url, {\n      prompt,\n      ai: selectedAI\n    });\n  }\n  static {\n    this.ɵfac = function ChatGptService_Factory(t) {\n      return new (t || ChatGptService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ChatGptService,\n      factory: ChatGptService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExC;EACAC,UAAU,CAACC,MAAc,EAAEC,UAAkB;IAC3C,MAAMC,GAAG,GAAG,kBAAkB,CAAC,CAAC;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAMD,GAAG,EAAE;MAAEF,MAAM;MAAEI,EAAE,EAAEH;IAAU,CAAE,CAAC;EAC7D;;;uBARWL,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAS,SAAdT,cAAc;MAAAU,YAFb;IAAM;EAAA","names":["ChatGptService","constructor","http","sendPrompt","prompt","selectedAI","url","post","ai","factory","providedIn"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/chat-gpt/chat-gpt.service.ts"],"sourcesContent":["// src/app/chat-gpt/chat-gpt.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatGptService {\n\n  constructor(private http: HttpClient) { }\n\n  // Método para enviar prompt para o backend\n  sendPrompt(prompt: string, selectedAI: string): Observable<any> {\n    const url = '/api/prompt-free'; // ou '/api/prompt' se estiver usando a versão paga\n    return this.http.post<any>(url, { prompt, ai: selectedAI });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}