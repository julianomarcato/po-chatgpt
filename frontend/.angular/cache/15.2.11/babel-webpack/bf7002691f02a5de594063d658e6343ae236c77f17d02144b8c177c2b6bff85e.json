{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.user = null;\n  }\n  checkAuth() {\n    return this.http.get('/api/user', {\n      withCredentials: true\n    });\n  }\n  isAuthenticated() {\n    return !!this.user;\n  }\n  setUser(user) {\n    this.user = user;\n  }\n  getUser() {\n    return this.user;\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,SAAI,GAAQ,IAAI;EAEe;EAEvCC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,WAAW,EAAE;MAAEC,eAAe,EAAC;IAAI,CAAE,CAAC;EAC7D;EAEAC,eAAe;IACb,OAAO,CAAC,CAAC,IAAI,CAACC,IAAI;EACpB;EAEAC,OAAO,CAACD,IAAQ;IACd,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEAE,OAAO;IACL,OAAO,IAAI,CAACF,IAAI;EAClB;;;uBApBWP,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAU,SAAXV,WAAW;MAAAW,YADC;IAAM;EAAA","names":["AuthService","constructor","http","checkAuth","get","withCredentials","isAuthenticated","user","setUser","getUser","factory","providedIn"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/auth.service.ts"],"sourcesContent":["// src/app/auth.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn:'root' })\nexport class AuthService {\n\n  private user: any = null;\n\n  constructor(private http: HttpClient) {}\n\n  checkAuth(): Observable<any> {\n    return this.http.get('/api/user', { withCredentials:true });\n  }\n\n  isAuthenticated(): boolean {\n    return !!this.user;\n  }\n\n  setUser(user:any) {\n    this.user = user;\n  }\n\n  getUser(){\n    return this.user;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}