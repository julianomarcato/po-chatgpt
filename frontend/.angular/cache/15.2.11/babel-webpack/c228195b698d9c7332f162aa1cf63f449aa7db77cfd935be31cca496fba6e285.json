{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./chat-gpt.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatGptComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"option\", 7);\n    i0.…µ…µtext(1);\n    i0.…µ…µelementEnd();\n  }\n  if (rf & 2) {\n    const ai_r2 = ctx.$implicit;\n    i0.…µ…µproperty(\"value\", ai_r2);\n    i0.…µ…µadvance(1);\n    i0.…µ…µtextInterpolate(ai_r2);\n  }\n}\nfunction ChatGptComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\", 8);\n    i0.…µ…µtext(1);\n    i0.…µ…µelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.…µ…µnextContext();\n    i0.…µ…µadvance(1);\n    i0.…µ…µtextInterpolate(ctx_r1.aviso);\n  }\n}\nexport class ChatGptComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.prompt = '';\n    this.resposta = '';\n    this.loading = false;\n    this.aviso = '';\n    this.selectedAI = 'GPT';\n    this.availableAIs = ['GPT', 'DeepSeek', 'Gemini'];\n  }\n  ngOnInit() {\n    console.log('üí° ChatGptComponent iniciado');\n  }\n  enviarPrompt() {\n    if (!this.prompt) return;\n    this.loading = true;\n    this.aviso = '';\n    this.resposta = '';\n    this.chatService.sendPrompt(this.prompt, this.selectedAI).subscribe({\n      next: res => {\n        this.resposta = res.resposta;\n        this.loading = false;\n      },\n      error: err => {\n        console.error('‚ùå Erro ao enviar prompt', err);\n        this.aviso = err.error?.error || 'Ocorreu um erro ao processar sua solicita√ß√£o';\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.…µfac = function ChatGptComponent_Factory(t) {\n      return new (t || ChatGptComponent)(i0.…µ…µdirectiveInject(i1.ChatGptService));\n    };\n  }\n  static {\n    this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n      type: ChatGptComponent,\n      selectors: [[\"app-chat-gpt\"]],\n      decls: 11,\n      vars: 7,\n      consts: [[1, \"chat-container\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Digite sua pergunta\", 3, \"ngModel\", \"ngModelChange\"], [3, \"disabled\", \"click\"], [1, \"resposta\"], [\"class\", \"aviso\", 4, \"ngIf\"], [3, \"value\"], [1, \"aviso\"]],\n      template: function ChatGptComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.…µ…µelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.…µ…µtext(2, \"Chat GPT\");\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(3, \"select\", 1);\n          i0.…µ…µlistener(\"ngModelChange\", function ChatGptComponent_Template_select_ngModelChange_3_listener($event) {\n            return ctx.selectedAI = $event;\n          });\n          i0.…µ…µtemplate(4, ChatGptComponent_option_4_Template, 2, 2, \"option\", 2);\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(5, \"textarea\", 3);\n          i0.…µ…µlistener(\"ngModelChange\", function ChatGptComponent_Template_textarea_ngModelChange_5_listener($event) {\n            return ctx.prompt = $event;\n          });\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(6, \"button\", 4);\n          i0.…µ…µlistener(\"click\", function ChatGptComponent_Template_button_click_6_listener() {\n            return ctx.enviarPrompt();\n          });\n          i0.…µ…µtext(7);\n          i0.…µ…µelementEnd();\n          i0.…µ…µelementStart(8, \"div\", 5);\n          i0.…µ…µtext(9);\n          i0.…µ…µelementEnd();\n          i0.…µ…µtemplate(10, ChatGptComponent_div_10_Template, 2, 1, \"div\", 6);\n          i0.…µ…µelementEnd();\n        }\n        if (rf & 2) {\n          i0.…µ…µadvance(3);\n          i0.…µ…µproperty(\"ngModel\", ctx.selectedAI);\n          i0.…µ…µadvance(1);\n          i0.…µ…µproperty(\"ngForOf\", ctx.availableAIs);\n          i0.…µ…µadvance(1);\n          i0.…µ…µproperty(\"ngModel\", ctx.prompt);\n          i0.…µ…µadvance(1);\n          i0.…µ…µproperty(\"disabled\", ctx.loading);\n          i0.…µ…µadvance(1);\n          i0.…µ…µtextInterpolate1(\" \", ctx.loading ? \"Enviando...\" : \"Enviar\", \" \");\n          i0.…µ…µadvance(2);\n          i0.…µ…µtextInterpolate(ctx.resposta);\n          i0.…µ…µadvance(1);\n          i0.…µ…µproperty(\"ngIf\", ctx.aviso);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.…µNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\".chat-container[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  margin: 50px auto;\\n  padding: 20px;\\n  border-radius: 10px;\\n  background: #f7f7f7;\\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\\n  font-family: Arial, sans-serif;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\nselect[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  font-size: 14px;\\n  border-radius: 6px;\\n  border: 1px solid #ccc;\\n  box-sizing: border-box;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  font-size: 16px;\\n  border-radius: 6px;\\n  border: none;\\n  background: #4CAF50;\\n  color: white;\\n  cursor: pointer;\\n}\\n\\nbutton[_ngcontent-%COMP%]:disabled {\\n  background: #999;\\n  cursor: not-allowed;\\n}\\n\\n.aviso[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  color: red;\\n  font-weight: bold;\\n}\\n\\n.resposta[_ngcontent-%COMP%] {\\n  margin-top: 15px;\\n  background: #e2f0d9;\\n  padding: 10px;\\n  border-radius: 6px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhdC1ncHQvY2hhdC1ncHQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixtQkFBbUI7RUFDbkIsc0NBQXNDO0VBQ3RDLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2Isa0JBQWtCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYXQtY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA2MDBweDtcbiAgbWFyZ2luOiA1MHB4IGF1dG87XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJhY2tncm91bmQ6ICNmN2Y3Zjc7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDEwcHggcmdiYSgwLDAsMCwwLjEpO1xuICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XG59XG5cbmgyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4uZm9ybS1ncm91cCB7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5cbnNlbGVjdCwgdGV4dGFyZWEge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmJ1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxMHB4O1xuICBmb250LXNpemU6IDE2cHg7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjNENBRjUwO1xuICBjb2xvcjogd2hpdGU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuYnV0dG9uOmRpc2FibGVkIHtcbiAgYmFja2dyb3VuZDogIzk5OTtcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cblxuLmF2aXNvIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5yZXNwb3N0YSB7XG4gIG1hcmdpbi10b3A6IDE1cHg7XG4gIGJhY2tncm91bmQ6ICNlMmYwZDk7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;IAIIA,iCAAqD;IAAAA,YAAQ;IAAAA,iBAAS;;;;IAA9BA,6BAAY;IAACA,eAAQ;IAARA,2BAAQ;;;;;IAU/DA,8BAAiC;IAAAA,YAAW;IAAAA,iBAAM;;;;IAAjBA,eAAW;IAAXA,kCAAW;;;ACL9C,OAAM,MAAOC,gBAAgB;EAQ3BC,YAAoBC,WAA2B;IAA3B,gBAAW,GAAXA,WAAW;IAP/B,WAAM,GAAW,EAAE;IACnB,aAAQ,GAAW,EAAE;IACrB,YAAO,GAAY,KAAK;IACxB,UAAK,GAAW,EAAE;IAClB,eAAU,GAAW,KAAK;IAC1B,iBAAY,GAAa,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC;EAEJ;EAElDC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAC7C;EAEAC,YAAY;IACV,IAAI,CAAC,IAAI,CAACC,MAAM,EAAE;IAElB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,QAAQ,GAAG,EAAE;IAElB,IAAI,CAACR,WAAW,CAACS,UAAU,CAAC,IAAI,CAACJ,MAAM,EAAE,IAAI,CAACK,UAAU,CAAC,CAACC,SAAS,CAAC;MAClEC,IAAI,EAAGC,GAAQ,IAAI;QACjB,IAAI,CAACL,QAAQ,GAAGK,GAAG,CAACL,QAAQ;QAC5B,IAAI,CAACF,OAAO,GAAG,KAAK;MACtB,CAAC;MACDQ,KAAK,EAAGC,GAAQ,IAAI;QAClBb,OAAO,CAACY,KAAK,CAAC,yBAAyB,EAAEC,GAAG,CAAC;QAC7C,IAAI,CAACR,KAAK,GAAGQ,GAAG,CAACD,KAAK,EAAEA,KAAK,IAAI,8CAA8C;QAC/E,IAAI,CAACR,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;;;uBAhCWR,gBAAgB;IAAA;EAAA;;;YAAhBA,gBAAgB;MAAAkB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDT7BvB,8BAA4B;UACtBA,wBAAQ;UAAAA,iBAAK;UAEjBA,iCAAiC;UAAzBA;YAAA;UAAA,EAAwB;UAC9BA,uEAAsE;UACxEA,iBAAS;UAETA,mCAAiE;UAAvDA;YAAA;UAAA,EAAoB;UAAmCA,iBAAW;UAE5EA,iCAAsD;UAA9CA;YAAA,OAASwB,kBAAc;UAAA,EAAC;UAC9BxB,YACF;UAAAA,iBAAS;UAETA,8BAAsB;UAAAA,YAAc;UAAAA,iBAAM;UAC1CA,mEAAkD;UACpDA,iBAAM;;;UAZIA,eAAwB;UAAxBA,wCAAwB;UACPA,eAAe;UAAfA,0CAAe;UAG9BA,eAAoB;UAApBA,oCAAoB;UAEGA,eAAoB;UAApBA,sCAAoB;UACnDA,eACF;UADEA,uEACF;UAEsBA,eAAc;UAAdA,kCAAc;UAC9BA,eAAW;UAAXA,gCAAW","names":["i0","ChatGptComponent","constructor","chatService","ngOnInit","console","log","enviarPrompt","prompt","loading","aviso","resposta","sendPrompt","selectedAI","subscribe","next","res","error","err","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/chat-gpt/chat-gpt.component.html","/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/chat-gpt/chat-gpt.component.ts"],"sourcesContent":["<div class=\"chat-container\">\n  <h2>Chat GPT</h2>\n\n  <select [(ngModel)]=\"selectedAI\">\n    <option *ngFor=\"let ai of availableAIs\" [value]=\"ai\">{{ ai }}</option>\n  </select>\n\n  <textarea [(ngModel)]=\"prompt\" placeholder=\"Digite sua pergunta\"></textarea>\n\n  <button (click)=\"enviarPrompt()\" [disabled]=\"loading\">\n    {{ loading ? 'Enviando...' : 'Enviar' }}\n  </button>\n\n  <div class=\"resposta\">{{ resposta }}</div>\n  <div *ngIf=\"aviso\" class=\"aviso\">{{ aviso }}</div>\n</div>\n","// frontend/src/app/chat-gpt/chat-gpt.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { ChatGptService } from './chat-gpt.service';\n\n@Component({\n  selector: 'app-chat-gpt',\n  templateUrl: './chat-gpt.component.html',\n  styleUrls: ['./chat-gpt.component.css']\n})\nexport class ChatGptComponent implements OnInit {\n  prompt: string = '';\n  resposta: string = '';\n  loading: boolean = false;\n  aviso: string = '';\n  selectedAI: string = 'GPT';\n  availableAIs: string[] = ['GPT', 'DeepSeek', 'Gemini'];\n\n  constructor(private chatService: ChatGptService) {}\n\n  ngOnInit(): void {\n    console.log('üí° ChatGptComponent iniciado');\n  }\n\n  enviarPrompt(): void {\n    if (!this.prompt) return;\n\n    this.loading = true;\n    this.aviso = '';\n    this.resposta = '';\n\n    this.chatService.sendPrompt(this.prompt, this.selectedAI).subscribe({\n      next: (res: any) => {\n        this.resposta = res.resposta;\n        this.loading = false;\n      },\n      error: (err: any) => {\n        console.error('‚ùå Erro ao enviar prompt', err);\n        this.aviso = err.error?.error || 'Ocorreu um erro ao processar sua solicita√ß√£o';\n        this.loading = false;\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}