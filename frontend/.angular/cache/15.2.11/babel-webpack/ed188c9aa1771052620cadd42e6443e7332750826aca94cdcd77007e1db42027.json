{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction LoginComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.aviso);\n  }\n}\nexport class LoginComponent {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n    this.aviso = '';\n  }\n  ngOnInit() {\n    this.auth.checkAuth().subscribe(res => {\n      if (res && res.authenticated) {\n        this.router.navigate(['/chat']);\n      }\n    });\n  }\n  loginGoogle() {\n    // redirect to backend OAuth; backend will redirect back to /chat\n    window.location.href = 'http://localhost:3000/auth/google';\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 6,\n      vars: 1,\n      consts: [[2, \"max-width\", \"420px\", \"margin\", \"40px auto\", \"text-align\", \"center\"], [3, \"click\"], [\"style\", \"color:#c0392b\", 4, \"ngIf\"], [2, \"color\", \"#c0392b\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_3_listener() {\n            return ctx.loginGoogle();\n          });\n          i0.ɵɵtext(4, \"Entrar com Google\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(5, LoginComponent_p_5_Template, 2, 1, \"p\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.aviso);\n        }\n      },\n      dependencies: [i3.NgIf],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;IAGEA,4BAAuC;IAAAA,YAAW;IAAAA,iBAAI;;;;IAAfA,eAAW;IAAXA,kCAAW;;;ACKpD,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAiB,EAAUC,MAAc;IAAzC,SAAI,GAAJD,IAAI;IAAuB,WAAM,GAANC,MAAM;IAFrD,UAAK,GAAW,EAAE;EAE8C;EAEhEC,QAAQ;IACN,IAAI,CAACF,IAAI,CAACG,SAAS,EAAE,CAACC,SAAS,CAAEC,GAAQ,IAAI;MAC3C,IAAIA,GAAG,IAAIA,GAAG,CAACC,aAAa,EAAE;QAC5B,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;IAEnC,CAAC,CAAC;EACJ;EAEAC,WAAW;IACT;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,mCAAmC;EAC5D;;;uBAjBWb,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAAc;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDR3BnB,8BAAiE;UAC3DA,qBAAK;UAAAA,iBAAK;UACdA,iCAAgC;UAAxBA;YAAA,OAASoB,iBAAa;UAAA,EAAC;UAACpB,iCAAiB;UAAAA,iBAAS;UAC1DA,2DAAsD;UACxDA,iBAAM;;;UADAA,eAAW;UAAXA,gCAAW","names":["i0","LoginComponent","constructor","auth","router","ngOnInit","checkAuth","subscribe","res","authenticated","navigate","loginGoogle","window","location","href","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/login/login.component.html","/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/login/login.component.ts"],"sourcesContent":["<div style=\"max-width:420px;margin:40px auto;text-align:center;\">\n  <h2>Login</h2>\n  <button (click)=\"loginGoogle()\">Entrar com Google</button>\n  <p *ngIf=\"aviso\" style=\"color:#c0392b\">{{ aviso }}</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n\n  aviso: string = '';\n\n  constructor(private auth: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.auth.checkAuth().subscribe((res: any) => {\n      if (res && res.authenticated) {\n        this.router.navigate(['/chat']);\n      }\n    });\n  }\n\n  loginGoogle(): void {\n    // redirect to backend OAuth; backend will redirect back to /chat\n    window.location.href = 'http://localhost:3000/auth/google';\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}