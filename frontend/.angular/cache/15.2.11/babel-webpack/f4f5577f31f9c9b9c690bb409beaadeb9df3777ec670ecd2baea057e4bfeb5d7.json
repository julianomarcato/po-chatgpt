{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(authService, router // Injetado corretamente\n  ) {\n    this.authService = authService;\n    this.router = router;\n  }\n  ngOnInit() {\n    // Se já estiver autenticado, redireciona para dashboard\n    this.authService.authenticated$.subscribe(authenticated => {\n      if (authenticated) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n  loginWithGoogle() {\n    this.authService.loginWithGoogle();\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 9,\n      vars: 0,\n      consts: [[1, \"login-container\"], [1, \"login-card\"], [1, \"google-login-btn\", 3, \"click\"], [\"src\", \"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\", \"alt\", \"Google\", \"width\", \"20\", \"height\", \"20\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n          i0.ɵɵtext(3, \"PO ChatGPT\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\");\n          i0.ɵɵtext(5, \"Fa\\u00E7a login para acessar m\\u00FAltiplas IAs\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_6_listener() {\n            return ctx.loginWithGoogle();\n          });\n          i0.ɵɵelement(7, \"img\", 3);\n          i0.ɵɵtext(8, \" Entrar com Google \");\n          i0.ɵɵelementEnd()()();\n        }\n      },\n      styles: [\".login-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  min-height: 100vh;\\n  background: #f5f5f5;\\n}\\n\\n.login-card[_ngcontent-%COMP%] {\\n  background: white;\\n  padding: 40px;\\n  border-radius: 10px;\\n  text-align: center;\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n}\\n\\n.google-login-btn[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n  background: #4285f4;\\n  color: white;\\n  border: none;\\n  padding: 12px 24px;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  font-size: 16px;\\n  margin-top: 20px;\\n}\\n\\n.google-login-btn[_ngcontent-%COMP%]:hover {\\n  background: #357ae8;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3QkFBd0I7QUFDeEI7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLHdDQUF3QztBQUMxQzs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsU0FBUztFQUNULG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBsb2dpbi5jb21wb25lbnQuY3NzICovXG4ubG9naW4tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xufVxuXG4ubG9naW4tY2FyZCB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBwYWRkaW5nOiA0MHB4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJveC1zaGFkb3c6IDAgNHB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG59XG5cbi5nb29nbGUtbG9naW4tYnRuIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiAxMHB4O1xuICBiYWNrZ3JvdW5kOiAjNDI4NWY0O1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMTJweCAyNHB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4uZ29vZ2xlLWxvZ2luLWJ0bjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICMzNTdhZTg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,cAAc;EAEzBC,YACUC,WAAwB,EACxBC,MAAc,CAAC;EAAA;IADf,gBAAW,GAAXD,WAAW;IACX,WAAM,GAANC,MAAM;EACb;EAEHC,QAAQ;IACN;IACA,IAAI,CAACF,WAAW,CAACG,cAAc,CAACC,SAAS,CAACC,aAAa,IAAG;MACxD,IAAIA,aAAa,EAAE;QACjB,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;;IAExC,CAAC,CAAC;EACJ;EAEAC,eAAe;IACb,IAAI,CAACP,WAAW,CAACO,eAAe,EAAE;EACpC;;;uBAlBWT,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAAU;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCT3BC,8BAA6B;UAErBA,0BAAU;UAAAA,iBAAK;UACnBA,yBAAG;UAAAA,+DAAqC;UAAAA,iBAAI;UAE5CA,iCAA6D;UAArDA;YAAA,OAASC,qBAAiB;UAAA,EAAC;UACjCD,yBACyC;UACzCA,mCACF;UAAAA,iBAAS","names":["LoginComponent","constructor","authService","router","ngOnInit","authenticated$","subscribe","authenticated","navigate","loginWithGoogle","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/login/login.component.ts","/Users/marcato/Local_Juliano/PO/po-chatgpt/frontend/src/app/login/login.component.html"],"sourcesContent":["// login.component.ts - CORRIGIDO\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router'; // Import correto\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router // Injetado corretamente\n  ) {}\n\n  ngOnInit() {\n    // Se já estiver autenticado, redireciona para dashboard\n    this.authService.authenticated$.subscribe(authenticated => {\n      if (authenticated) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n\n  loginWithGoogle() {\n    this.authService.loginWithGoogle();\n  }\n}","<!-- login.component.html -->\n<div class=\"login-container\">\n  <div class=\"login-card\">\n    <h1>PO ChatGPT</h1>\n    <p>Faça login para acessar múltiplas IAs</p>\n    \n    <button (click)=\"loginWithGoogle()\" class=\"google-login-btn\">\n      <img src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" \n           alt=\"Google\" width=\"20\" height=\"20\">\n      Entrar com Google\n    </button>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}